"use strict";const e=require("../../../../common/vendor.js");const t=(new class{constructor(){this.config={type:"navigateTo",url:"",delta:1,params:{},animationType:"pop-in",animationDuration:300,intercept:!1},this.route=this.route.bind(this)}addRootPath(e){return"/"===e[0]?e:`/${e}`}mixinParam(t,i){t=t&&this.addRootPath(t);let n="";return/.*\/.*\?.*=.*/.test(t)?(n=e.index.$u.queryParams(i,!1),t+`&${n}`):(n=e.index.$u.queryParams(i),t+n)}async route(t={},i={}){let n={};if("string"==typeof t?(n.url=this.mixinParam(t,i),n.type="navigateTo"):(n=e.index.$u.deepMerge(this.config,t),n.url=this.mixinParam(t.url,t.params)),n.url!==e.index.$u.page())if(i.intercept&&(this.config.intercept=i.intercept),n.params=i,n=e.index.$u.deepMerge(this.config,n),"function"==typeof e.index.$u.routeIntercept){await new Promise(((t,i)=>{e.index.$u.routeIntercept(n,t)}))&&this.openPage(n)}else this.openPage(n)}openPage(t){const{url:i,type:n,delta:a,animationType:r,animationDuration:o}=t;"navigateTo"!=t.type&&"to"!=t.type||e.index.navigateTo({url:i,animationType:r,animationDuration:o}),"redirectTo"!=t.type&&"redirect"!=t.type||e.index.redirectTo({url:i}),"switchTab"!=t.type&&"tab"!=t.type||e.index.switchTab({url:i}),"reLaunch"!=t.type&&"launch"!=t.type||e.index.reLaunch({url:i}),"navigateBack"!=t.type&&"back"!=t.type||e.index.navigateBack({delta:a})}}).route;exports.route=t;
